{"ast":null,"code":"var _jsxFileName = \"/workspaces/ReactTry/src/pages/Jobs.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { collection, getDocs } from 'firebase/firestore';\nimport JobCard from '../components/JobCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Jobs() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, 'jobs'));\n        const jobsData = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setJobs(jobsData);\n      } catch (error) {\n        console.error('Error fetching jobs:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center py-8\",\n    children: \"Loading jobs...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-900 mb-8\",\n      children: \"All Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3\",\n      children: jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No jobs available at the moment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Jobs, \"xAXs/kqjedBdxYZ+TLlF70OyTQI=\");\n_c = Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["useEffect","useState","db","collection","getDocs","JobCard","jsxDEV","_jsxDEV","Jobs","_s","jobs","setJobs","loading","setLoading","fetchJobs","querySnapshot","jobsData","docs","map","doc","id","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","job","_c","$RefreshReg$"],"sources":["/workspaces/ReactTry/src/pages/Jobs.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { db } from '../firebase'\nimport { collection, getDocs } from 'firebase/firestore'\nimport JobCard from '../components/JobCard'\n\nexport default function Jobs() {\n  const [jobs, setJobs] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, 'jobs'))\n        const jobsData = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n        setJobs(jobsData)\n      } catch (error) {\n        console.error('Error fetching jobs:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchJobs()\n  }, [])\n\n  if (loading) return <div className=\"text-center py-8\">Loading jobs...</div>\n\n  return (\n    <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n      <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">All Job Listings</h1>\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3\">\n        {jobs.length > 0 ? (\n          jobs.map(job => <JobCard key={job.id} job={job} />)\n        ) : (\n          <p className=\"text-gray-600\">No jobs available at the moment</p>\n        )}\n      </div>\n    </div>\n  )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,aAAa;AAChC,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,OAAOC,OAAO,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,aAAa,GAAG,MAAMX,OAAO,CAACD,UAAU,CAACD,EAAE,EAAE,MAAM,CAAC,CAAC;QAC3D,MAAMc,QAAQ,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;UAC9CC,EAAE,EAAED,GAAG,CAACC,EAAE;UACV,GAAGD,GAAG,CAACE,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACHV,OAAO,CAACK,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,SAAS;QACRT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAOL,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE3E,oBACEtB,OAAA;IAAKiB,SAAS,EAAC,6CAA6C;IAAAC,QAAA,gBAC1DlB,OAAA;MAAIiB,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3EtB,OAAA;MAAKiB,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClEf,IAAI,CAACoB,MAAM,GAAG,CAAC,GACdpB,IAAI,CAACQ,GAAG,CAACa,GAAG,iBAAIxB,OAAA,CAACF,OAAO;QAAc0B,GAAG,EAAEA;MAAI,GAAjBA,GAAG,CAACX,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,CAAC,gBAEnDtB,OAAA;QAAGiB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAChE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CArCuBD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}